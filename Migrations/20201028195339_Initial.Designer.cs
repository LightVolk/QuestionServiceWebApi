// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuestionServiceWebApi.Db;

namespace QuestionServiceWebApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201028195339_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("QuestionServiceWebApi.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("accept_rate")
                        .HasColumnType("integer");

                    b.Property<string>("display_name")
                        .HasColumnType("text");

                    b.Property<string>("link")
                        .HasColumnType("text");

                    b.Property<string>("profile_image")
                        .HasColumnType("text");

                    b.Property<int>("reputation")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("QuestionServiceWebApi.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("answer_count")
                        .HasColumnType("integer");

                    b.Property<int?>("bounty_amount")
                        .HasColumnType("integer");

                    b.Property<int?>("bounty_closes_date")
                        .HasColumnType("integer");

                    b.Property<int?>("closed_date")
                        .HasColumnType("integer");

                    b.Property<string>("closed_reason")
                        .HasColumnType("text");

                    b.Property<string>("content_license")
                        .HasColumnType("text");

                    b.Property<int>("creation_date")
                        .HasColumnType("integer");

                    b.Property<bool>("is_answered")
                        .HasColumnType("boolean");

                    b.Property<int>("last_activity_date")
                        .HasColumnType("integer");

                    b.Property<int>("last_edit_date")
                        .HasColumnType("integer");

                    b.Property<string>("link")
                        .HasColumnType("text");

                    b.Property<int?>("ownerId")
                        .HasColumnType("integer");

                    b.Property<int>("question_id")
                        .HasColumnType("integer");

                    b.Property<int>("score")
                        .HasColumnType("integer");

                    b.Property<List<string>>("tags")
                        .HasColumnType("text[]");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<int>("view_count")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ownerId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionServiceWebApi.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("QuestionServiceWebApi.Models.Question", b =>
                {
                    b.HasOne("QuestionServiceWebApi.Models.Owner", "owner")
                        .WithMany()
                        .HasForeignKey("ownerId");
                });
#pragma warning restore 612, 618
        }
    }
}
